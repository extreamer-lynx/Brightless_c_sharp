<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFEAAACTCAYAAAD2r/WJAAAABGdBTUEAALGPC/xhBQAAA/1JREFUeF7t
        2NFV21AQRdGUQAfxSgWUQAmU4BIogRJSAiVQAiVQAiXQgXPHiVhiPMjJXD1WsM7H+cizJHt2ZEnm2+Fw
        +NR+fN9dqXv1og4r9qz21XuOrlwclYYMwBi2Qlirh+q9R1YujkoDjgac+lm9/6jKxRFpsH0adHS76nOM
        qFwckYZ6SkOO7q76HCMqF0ekoV7TkKP7tGtjuTiiYsjRPVWfY0Tl4oiKIUcH4gqBuEL/F6I+0E7FI0r8
        0uhWDTqy+EVUfY6/7VZdVR65cnFKBwm4z3pA/l97VDeVz1S5GDuptX/bfvXiObc8M08WtOFn/7L4SsWz
        7nU2e/cPbQDg+U4g54DxFa52otPiUvf21Z4jcg38t95+Vk6A577GcQrHbf/kenCJac54vHlQlcW841+K
        pp2WHmPitU3g5TT3uZPr+HfL2DAepKsNovJutKU0/xLkS2xzbqP7fNAtJoelb+ouNohrXfVitOmzcEoO
        d8ll3s0iYj7YVpPF0uMfiH+TLEB0kwWIbrIA0U0WILrJAkQ3WYDoJgsQ3WQBopssQHSTBYhusgDRTRYg
        uskCRDdZgOgmCxDdZAGimyxAdJMFiG6yANFNFiC6yQJEN1mA6CYLEN1kAaKbLEB0kwWIbrIA0U0WILrJ
        AkQ3WYDoJgsQ3WQBopssQHSTBYhusgDRTRYguskCRDdZgOgmCxDdZAGimyxAdJMFiG6yANFNFiC6yQJE
        N1mA6CYLEN1kAaKbLEB0kwWIbrIA0U0WILrJAkQ3WYDoJgsQ3WQBopssQHSTBYhusgDRTRYguskCRDdZ
        gOgmCxDdZAGimyxAdJMFiG6yANFNFiC6yQJEN1mA6CYLEN1kAaKbLNZH1GsX2wfzrouo9YuvmHk9RK1t
        pjQ3iJ3S3CB2SnOD2CnNDWKnNDeIndLcIHZKc4PYKc0NYqc0N4id0twgdkpzg9gpzQ1ipzQ3iJ3S3CB2
        SnOD2CnNDWKnNDeIndLcIHZKc4PYKc0NYqc0N4id0twgdkpzg9gpzQ1ipzQ3iJ3S3CB2SnOD2CnNDWKn
        NDeIndLcIHZKc4PYKc0NYqc0N4id0twgdkpzg9gpzb0eYqT1i6+YuY+oQrI66MX2wbx7VflER8S7tDhv
        Xx10a8nhMbnMu44NrtPivBd1VR14K2n+JZ/X2Gba8DW9OO9hftAtpdl3Kk6kyiU62kwbL10Xo2d1M3+D
        S0/zxnVw6eSKjibTDlfq3A5R/K88baBq9tzTBD6XX7rB0GnXJ4h/IB/ShlT37qnlHWKkDYBc7uSx790/
        prThuRvNFot7xm3ldbIwpR3i9s5Z+RsvTqoPn5fLxXnaOTDjphOg1Z3sUvupbtWZHxuHb78AETrhgHQD
        VQcAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>